AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Polybot
  SAM Template for Polybot  

Parameters:
  ConfBucket:
    Description: s3 bucket
    Type: String

Resources:
  # --------------------- STORAGE ---------------------
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOutputFiles
            Prefix: output/
            Status: Enabled
            ExpirationInDays: 1
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
              - POST
              - PUT
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'

  # --------------------- LAMBDAS ---------------------
  PolybotCommand:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: polybotCommand/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Timeout: 60
      MemorySize: 2048
      Layers:
        - Ref: ChromiumLayer
      Environment:
        Variables:
          PYTHONPATH: "/var/task/src:/opt/python"
          PATH: "/opt/bin:/opt/bin/lib"
          BUCKET: !Ref Bucket
          URL: https://polygon.codeforces.com/
          DESTPATH: screenshots
      Events:
        Api:
          Type: Api
          Properties:
            Path: /polybotCommand
            Method: GET
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:*
              Resource: 
                - !Sub 'arn:aws:s3:::${Bucket}'
                - !Sub 'arn:aws:s3:::${Bucket}/*'

  # --------------------- LAYERS ---------------------
  ChromiumLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
        CompatibleRuntimes:
            - python3.9
        Content:
            S3Bucket: 
                Ref: ConfBucket
            S3Key: 
                Fn::Sub: 'src/ChromiumLayer.zip'
        Description: Chromium Layer for Python3.9

  # --------------------- RESOURCE GROUP ---------------------
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
        - ''
        - - ApplicationInsights-SAM-
          - Ref: AWS::StackName
      AutoConfigurationEnabled: 'true'
    DependsOn: ApplicationResourceGroup
    
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage for Polybot API
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"